/* Copyright 2020 Istio Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

// clang-format off
// $schema: istio.attributegen
// $title: AttributeGen Config
// $description: Configuration for Attribute Generation plugin.
// $location: https://istio.io/docs/reference/config/proxy_extensions/attributegen.html
// $weight: 20
// clang-format on

// AttributeGen plugin uses [builtin
// attributes](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes)
// as inputs and produces new attributes that can be used by downstream plugins.
//
// The following is an example of a configuration that produces one attribute
// named `istio_operationId` using `request.url_path` and `request.method`.
//
// {{<tabset category-name="example">}}
// {{<tab name="v1alpha3" category-value="v1alpha3">}}
// ```yaml
// {
//   "attributes": [
//     {
//       "output_attribute": "istio_operationId",
//       "match": [
//         {
//           "value": "ListBooks",
//           "condition": "request.url_path == '/books' && request.method ==
//           'GET'"
//         },
//         {
//           "value": "GetBook",
//           "condition":
//           "request.url_path.matches('^/shelves/[[:alnum:]]*/books/[[:alnum:]]*$')
//           && request.method == 'GET'"
//         },
//         {
//           "value": "CreateBook",
//           "condition": "request.url_path == '/books/' && request.method ==
//           'POST'"
//         }
//       ]
//     }
//   ]
// }
//
// ```
// {{</tab>}}
// {{</tabset>}}
//
// If the Stats plugin runs after AttributeGen, it can use `istio_operationId`
// to populate a dimension on a metric.
//
// The following is an example of response codes being mapped into a smaller
// number of response classes as the `istio_responseClass` attribute. For
// example, all response codes in 200s are mapped to `2xx`.
//
// {{<tabset category-name="example">}}
// {{<tab name="v1alpha3" category-value="v1alpha3">}}
// ```yaml
// {
//   "attributes": [
//     {
//       "output_attribute": "istio_responseClass",
//       "match": [
//         {
//           "value": "2xx",
//           "condition": "response.code >= 200 && response.code <= 299"
//         },
//         {
//           "value": "3xx",
//           "condition": "response.code >= 300 && response.code <= 399"
//         },
//         {
//           "value": "404",
//           "condition": "response.code == 404"
//         },
//         {
//           "value": "429",
//           "condition": "response.code == 429"
//         },
//         {
//           "value": "503",
//           "condition": "response.code == 503"
//         },
//         {
//           "value": "5xx",
//           "condition": "response.code >= 500 && response.code <= 599"
//         },
//         {
//           "value": "4xx",
//           "condition": "response.code >= 400 && response.code <= 499"
//         }
//       ]
//     }
//   ]
// }
//
// ```
// {{</tab>}}
// {{</tabset>}}
//
// If multiple AttributeGen configurations produce the same attribute, the
// result of the last configuration will be visible to downstream filters.
package istio.attributegen;

// Top level configuration to generate new attributes based on attributes of the
// proxied traffic.
message PluginConfig {
  // The following settings should be rarely used.
  // Enable debug for this filter.
  bool debug = 1;
  // Multiple independent attribute generation configurations.
  repeated AttributeGeneration attributes = 2;
}

// AttributeGeneration define generation of one attribute.
message AttributeGeneration {
  // Phase denotes plugin lifecycle phase when the new attribute is generated.
  // Default: After the response is sent back to the client.
  //
  // $hide_from_docs
  Phase phase = 1;

  // The name of the attribute that is populated on a successful match.
  // An attribute name SHOULD NOT contain a `.`. You may use underscores for
  // namespacing instead.
  //
  // Example: `istio_operationId`
  //
  // `istio_` attribute namespace is reserved by Istio.
  //
  // AttributeGeneration may fail to evaluate when an attribute is not
  // available. For example, `response.code` may not be available when a request
  // ends abruptly. When attribute generation fails, it will not populate the
  // attribute.
  //
  // If the generated attribute is used by an authz plugin, it should account
  // for the possibility that the attribute may be missing. Use
  // `has(attribute_name)` function to check for presence of an attribute before
  // using its value, and provide appropriate defaults. For example the
  // following is a safe use of `response.code`
  //
  // `has(response.code)?response.code:200`
  string output_attribute = 2;

  // Matches are evaluated in order until the first successful match.
  // The value specified by the successful match is assgined to the
  // output_attribute.
  repeated Match match = 3;
}

// If the condition evaluates to true then the Match returns the specified
// value.
message Match {
  // The condition is a [CEL
  // expression](https://github.com/google/cel-spec/blob/master/doc/langdef.md)
  // that may use [builtin
  // attributes](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes#attributes).
  //
  // Example:
  //
  // {{<tabset category-name="example">}}
  // {{<tab name="attribute-match" >}}
  // ```yaml
  //    {
  //      "value": "GetBook",
  //      "condition":
  //      "request.url_path.matches('^/shelves/[[:alnum:]]*/books/[[:alnum:]]*$')
  //      && request.method == 'GET'"
  //    },
  // ```
  // Note: CEL uses [re2](https://github.com/google/re2/wiki/Syntax) regex
  // library. Use anchors `{^, $}` to ensure that the regex evaluates
  // efficiently.
  //
  // Note: `request.url_path` is normalized and stripped of query params.
  //
  // a Read only operation on books
  // ```yaml
  // { "value": "ReadOnlyBooks",
  //   "condition": "request.url_path.startsWith('/books/') &&
  //   in(request.method, ['GET', 'HEAD'])"}
  // ```
  // {{</tab>}}
  // {{</tabset>}}
  //
  // An empty condition evaluates to `true` and should be used to provide a
  // default value.
  string condition = 1;

  // If condition evaluates to true, return the `value`.
  string value = 2;
}

// Phase determines when the classification is performed.
// $hide_from_docs
enum Phase {
  option allow_alias = true;
  // AttributeGeneration is performed after the response is sent back to the
  // client. All information about the request is available in this phase, and
  // classification does not add to the latency observed by the client.
  // $hide_from_docs
  PHASE_UNSPECIFIED = 0;
  // $hide_from_docs
  AFTER_RESPONSE = 0;

  // AttributeGeneration is performed during request processing, and adds to
  // the request latency as observed by the client.
  // Only request related information can be used in this phase.
  // For example: you may not use response headers here.
  // Attemping to use response headers in request phase will never result in a
  // match.
  //
  // $hide_from_docs
  ON_REQUEST = 1;

  // ADD ON_RESPONSE=2 if there is a need.
}
