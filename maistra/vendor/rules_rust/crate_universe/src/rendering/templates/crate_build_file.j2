{%- set crate = context.crates | get(key=crate_id) %}
{%- include "partials/header.j2" %}

load(
    "@bazel_skylib//lib:selects.bzl", 
    "selects",
)
load(
    "@rules_rust//cargo:defs.bzl",
    "cargo_build_script",
)
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # {{ crate.license }}
# ])

{% for rule in crate.targets -%}
{%- for rule_type, target in rule %}
{%- if rule_type in ["BuildScript"] %}
{% include "partials/crate/build_script.j2" %}
{%- elif rule_type in ["ProcMacro"] %}
{% include "partials/crate/proc_macro.j2" %}
{%- elif rule_type in ["Library"] %}
{% include "partials/crate/library.j2" %}
{%- elif rule_type in ["Binary"] %}
{% include "partials/crate/binary.j2" %}
{%- endif %}
{%- endfor %}
{%- endfor %}
{%- if crate.additive_build_file_content %}
# Additive BUILD file content
{{ crate.additive_build_file_content }}
{%- endif %}
