load("//rust:defs.bzl", "rust_binary", "rust_clippy", "rust_library")

package(default_visibility = ["//visibility:public"])

exports_files(["rustfmt.toml"])

alias(
    name = "rustfmt_bin",
    actual = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": "@rust_darwin_aarch64//:rustfmt_bin",
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": "@rust_linux_aarch64//:rustfmt_bin",
        "@rules_rust//rust/platform:x86_64-apple-darwin": "@rust_darwin_x86_64//:rustfmt_bin",
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": "@rust_windows_x86_64//:rustfmt_bin",
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": "@rust_linux_x86_64//:rustfmt_bin",
    }),
)

rust_library(
    name = "rustfmt_lib",
    srcs = glob(
        ["srcs/**/*.rs"],
        exclude = ["srcs/**/*main.rs"],
    ),
    data = [
        ":rustfmt_bin",
        "//:rustfmt.toml",
    ],
    edition = "2018",
    rustc_env = {
        "RUSTFMT": "$(rootpath :rustfmt_bin)",
        "RUSTFMT_CONFIG": "$(rootpath //:rustfmt.toml)",
    },
)

rust_binary(
    name = "rustfmt",
    srcs = [
        "srcs/main.rs",
    ],
    data = [
        "//:rustfmt.toml",
    ],
    edition = "2018",
    deps = [
        ":rustfmt_lib",
        "//util/label",
    ],
)

rust_binary(
    name = "rustfmt_test",
    srcs = [
        "srcs/test_main.rs",
    ],
    edition = "2018",
    deps = [
        ":rustfmt_lib",
        "//tools/runfiles",
    ],
)

rust_clippy(
    name = "rustfmt_clippy",
    testonly = True,
    visibility = ["//visibility:private"],
    deps = [
        ":rustfmt",
    ],
)
