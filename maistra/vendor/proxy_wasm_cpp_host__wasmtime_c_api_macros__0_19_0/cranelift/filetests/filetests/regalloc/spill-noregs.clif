test regalloc
target x86_64 legacy

; Test case found by the Binaryen fuzzer.
;
; The spiller panics with a
; 'Ran out of GPR registers when inserting copy before v68 = icmp.i32 eq v66, v67',
; cranelift-codegen/src/regalloc/spilling.rs:425:28 message.
;
; The process_reg_uses() function is trying to insert a copy before the icmp instruction in block4
; and runs out of registers to spill. Note that block7 has a lot of dead parameter values.
;
; The spiller was not releasing register pressure for dead block parameters.

function %pr223(i32 [%rdi], i64 vmctx [%rsi]) -> i64 [%rax] system_v {
block0(v0: i32, v1: i64):
    v2 = iconst.i32 0
    v3 = iconst.i64 0
    v4 = iconst.i32 0xffff_ffff_bb3f_4a2c
    brz v4, block5
    jump block1

block1:
    v5 = iconst.i32 0
    v6 = copy.i64 v3
    v7 = copy.i64 v3
    v8 = copy.i64 v3
    v9 = copy.i64 v3
    v10 = copy.i64 v3
    v11 = copy.i64 v3
    v12 = copy.i64 v3
    v13 = copy.i64 v3
    v14 = copy.i64 v3
    v15 = copy.i64 v3
    v16 = copy.i64 v3
    brnz v5, block4(v2, v3, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
    jump block2

block2:
    v17 = iconst.i32 0
    v18 = copy.i64 v3
    v19 = copy.i64 v3
    v20 = copy.i64 v3
    v21 = copy.i64 v3
    v22 = copy.i64 v3
    v23 = copy.i64 v3
    v24 = copy.i64 v3
    v25 = copy.i64 v3
    v26 = copy.i64 v3
    v27 = copy.i64 v3
    v28 = copy.i64 v3
    brnz v17, block4(v2, v3, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28)
    jump block3

block3:
    jump block1

block4(v29: i32, v30: i64, v31: i64, v32: i64, v33: i64, v34: i64, v35: i64, v36: i64, v37: i64, v38: i64, v39: i64, v40: i64, v41: i64):
    jump block7(v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41)

block5:
    jump block6

block6:
    v42 = copy.i64 v3
    v43 = copy.i64 v3
    v44 = copy.i64 v3
    v45 = copy.i64 v3
    v46 = copy.i64 v3
    v47 = copy.i64 v3
    v48 = copy.i64 v3
    v49 = copy.i64 v3
    v50 = copy.i64 v3
    v51 = copy.i64 v3
    v52 = copy.i64 v3
    jump block7(v2, v3, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52)

block7(v53: i32, v54: i64, v55: i64, v56: i64, v57: i64, v58: i64, v59: i64, v60: i64, v61: i64, v62: i64, v63: i64, v64: i64, v65: i64):
    v66 = iconst.i32 0
    v67 = iconst.i32 0
    v68 = icmp eq v66, v67
    v69 = bint.i32 v68
    jump block8

block8:
    jump block9

block9:
    v70 = iconst.i32 0xffff_ffff_ffff_912f
    brz v70, block10
    jump block35

block10:
    v71 = iconst.i32 0
    brz v71, block11
    jump block27

block11:
    jump block12

block12:
    jump block13

block13:
    jump block14

block14:
    jump block15

block15:
    jump block16

block16:
    jump block17

block17:
    jump block18

block18:
    jump block19

block19:
    jump block20

block20:
    jump block21

block21:
    jump block22

block22:
    jump block23

block23:
    jump block24

block24:
    jump block25

block25:
    jump block26

block26:
    jump block27

block27:
    jump block28

block28:
    jump block29

block29:
    jump block30

block30:
    jump block31

block31:
    jump block32

block32:
    jump block33

block33:
    jump block34

block34:
    jump block35

block35:
    jump block36

block36:
    trap user0
}
