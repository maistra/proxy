; Test the legalization of block arguments that are split.
test legalizer
target riscv32

; regex: V=v\d+

function %simple(i64, i64) -> i64 {
block0(v1: i64, v2: i64):
; check: block0($(v1l=$V): i32, $(v1h=$V): i32, $(v2l=$V): i32, $(v2h=$V): i32, $(link=$V): i32):
    jump block1(v1)
    ; check: jump block1($v1l, $v1h)

block1(v3: i64):
; check: block1($(v3l=$V): i32, $(v3h=$V): i32):
    v4 = band v3, v2
    ; check: $(v4l=$V) = band $v3l, $v2l
    ; check: $(v4h=$V) = band $v3h, $v2h
    return v4
    ; check: return $v4l, $v4h, $link
}

function %multi(i64) -> i64 {
block1(v1: i64):
; check: block1($(v1l=$V): i32, $(v1h=$V): i32, $(link=$V): i32):
    jump block2(v1, v1)
    ; check: jump block2($v1l, $v1l, $v1h, $v1h)

block2(v2: i64, v3: i64):
; check: block2($(v2l=$V): i32, $(v3l=$V): i32, $(v2h=$V): i32, $(v3h=$V): i32):
    jump block3(v2)
    ; check: jump block3($v2l, $v2h)

block3(v4: i64):
; check: block3($(v4l=$V): i32, $(v4h=$V): i32):
    v5 = band v4, v3
    ; check: $(v5l=$V) = band $v4l, $v3l
    ; check: $(v5h=$V) = band $v4h, $v3h
    return v5
    ; check: return $v5l, $v5h, $link
}

function %loop(i64, i64) -> i64 {
block0(v1: i64, v2: i64):
; check: block0($(v1l=$V): i32, $(v1h=$V): i32, $(v2l=$V): i32, $(v2h=$V): i32, $(link=$V): i32):
    jump block1(v1)
    ; check: jump block1($v1l, $v1h)

block1(v3: i64):
; check: block1($(v3l=$V): i32, $(v3h=$V): i32):
    v4 = band v3, v2
    ; check: $(v4l=$V) = band $v3l, $v2l
    ; check: $(v4h=$V) = band $v3h, $v2h
    jump block1(v4)
    ; check: jump block1($v4l, $v4h)
}
