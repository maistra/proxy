test compile
target x86_64 legacy baseline

; umulhi/smulhi on 64 bit operands

function %i64_umulhi(i64, i64) -> i64 {
block0(v10: i64, v11: i64):
  v12 = umulhi v10, v11
  ; check: %rdi -> %rax
  ; check: x86_umulx
  ; check: %rdx -> %rax
  return v12
}

function %i64_smulhi(i64, i64) -> i64 {
block0(v20: i64, v21: i64):
  v22 = smulhi v20, v21
  ; check: %rdi -> %rax
  ; check: x86_smulx
  ; check: %rdx -> %rax
  return v22
}


; umulhi/smulhi on 32 bit operands

function %i32_umulhi(i32, i32) -> i32 {
block0(v30: i32, v31: i32):
  v32 = umulhi v30, v31
  ; check: %rdi -> %rax
  ; check: x86_umulx
  ; check: %rdx -> %rax
  return v32
}

function %i32_smulhi(i32, i32) -> i32 {
block0(v40: i32, v41: i32):
  v42 = smulhi v40, v41
  ; check: %rdi -> %rax
  ; check: x86_smulx
  ; check: %rdx -> %rax
  return v42
}
