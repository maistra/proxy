; Check that floating-point and integer constants equal to zero are optimized correctly.
test binemit
set opt_level=speed_and_size
target i686 legacy

function %foo() -> f32 fast {
block0:
  ; asm: xorps %xmm0, %xmm0
  [-,%xmm0]    v0 = f32const 0.0     ; bin: 0f 57 c0
  return v0
}

function %bar() -> f64 fast {
block0:
  ; asm: xorpd %xmm0, %xmm0
  [-,%xmm0]    v1 = f64const 0.0     ; bin: 66 0f 57 c0
  return v1
}

function %zero_dword() -> i32 fast {
block0:
  ; asm: xor %eax, %eax
  [-,%rax]     v0 = iconst.i32 0     ; bin: 31 c0
  ; asm: xor %edi, %edi
  [-,%rdi]     v1 = iconst.i32 0     ; bin: 31 ff
  return v0
}

function %zero_word() -> i16 fast {
block0:
  ; while you may expect this to be encoded like 6631c0, aka
  ; xor %ax, %ax, the upper 16 bits of the register used for
  ; i16 are left undefined, so it's not wrong to clear them.
  ;
  ; discarding the 66 prefix is shorter, so this test expects
  ; that we do so.
  ;
  ; asm: xor %eax, %eax
  [-,%rax]     v0 = iconst.i16 0     ; bin: 31 c0
  ; asm: xor %edi, %edi
  [-,%rdi]     v1 = iconst.i16 0     ; bin: 31 ff
  return v0
}

function %zero_byte() -> i8 fast {
block0:
  ; asm: xor %eax, %eax
  [-,%rax]     v0 = iconst.i8 0     ; bin: 31 c0
  ; asm: xor %edi, %edi
  [-,%rdi]     v1 = iconst.i8 0     ; bin: 31 ff
  return v0
}
