test legalizer
set enable_simd
target x86_64 legacy skylake

function %fcvt_from_uint(i32x4) -> f32x4 {
block0(v0:i32x4):
    v1 = fcvt_from_uint.f32x4 v0
    ; check: v2 = raw_bitcast.i16x8 v0
    ; nextln: v3 = vconst.i16x8 const0
    ; nextln: v4 = x86_pblendw v3, v2, 85
    ; nextln: v5 = raw_bitcast.i32x4 v4
    ; nextln: v6 = isub v0, v5
    ; nextln: v7 = fcvt_from_sint.f32x4 v5
    ; nextln: v8 = ushr_imm v6, 1
    ; nextln: v9 = fcvt_from_sint.f32x4 v8
    ; nextln: v10 = fadd v9, v9
    ; nextln: v1 = fadd v10, v7
    return v1
}

function %fcvt_to_sint_sat(f32x4) -> i32x4 {
block0(v0:f32x4):
    v1 = fcvt_to_sint_sat.i32x4 v0
    ; check: v2 = fcmp eq v0, v0
    ; nextln: v3 = raw_bitcast.f32x4 v2
    ; nextln: v4 = band v0, v3
    ; nextln: v5 = bxor v3, v0
    ; nextln: v6 = raw_bitcast.i32x4 v5
    ; nextln: v7 = x86_cvtt2si.i32x4 v4
    ; nextln: v8 = band v6, v7
    ; nextln: v9 = sshr_imm v8, 31
    ; nextln: v1 = bxor v7, v9
    return v1
}

function %fcvt_to_uint_sat(f32x4) -> i32x4 {
; check: const0 = 0x00000000000000000000000000000000
; nextln: const1 = 0x4f0000004f0000004f0000004f000000
block0(v0:f32x4):
    v1 = fcvt_to_uint_sat.i32x4 v0
    ; check: v2 = vconst.f32x4 const0
    ; nextln: v3 = vconst.f32x4 const1
    ; nextln: v4 = x86_fmax v0, v2
    ; nextln: v5 = fsub v4, v3
    ; nextln: v6 = fcmp le v3, v5
    ; nextln: v7 = x86_cvtt2si.i32x4 v5
    ; nextln: v8 = raw_bitcast.i32x4 v6
    ; nextln: v9 = bxor v7, v8
    ; nextln: v10 = raw_bitcast.i32x4 v2
    ; nextln: v11 = x86_pmaxs v9, v10
    ; nextln: v12 = x86_cvtt2si.i32x4 v4
    ; nextln: v1 = iadd v12, v11
    return v1
}

function %uwiden_high(i8x16) -> i16x8 {
block0(v0: i8x16):
    v1 = uwiden_high v0
    ; check: v2 = x86_palignr v0, v0, 8
    ; nextln: v1 = uwiden_low v2
    return v1
}

function %swiden_high(i16x8) -> i32x4 {
block0(v0: i16x8):
    v1 = swiden_high v0
    ; check: v2 = x86_palignr v0, v0, 8
    ; nextln: v1 = swiden_low v2
    return v1
}
