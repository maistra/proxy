load("@io_bazel_rules_go//go/private:go_toolchain.bzl", "declare_bazel_toolchains")
load("@bazel_skylib//lib:selects.bzl", "selects")


MAJOR_VERSION = "1"
MINOR_VERSION = "20"
PATCH_VERSION = "7"
PRERELEASE_SUFFIX = ""


package(default_visibility = ["//visibility:public"])

sdk_version_label = "@io_bazel_rules_go//go/toolchain:sdk_version"

config_setting(
    name = "match_all_versions",
    flag_values = {
        sdk_version_label: "",
    },
    visibility = ["//visibility:private"],
)

config_setting(
    name = "match_major_version",
    flag_values = {
        sdk_version_label: MAJOR_VERSION,
    },
    visibility = ["//visibility:private"],
)

config_setting(
    name = "match_major_minor_version",
    flag_values = {
        sdk_version_label: MAJOR_VERSION + "." + MINOR_VERSION,
    },
    visibility = ["//visibility:private"],
)

config_setting(
    name = "match_patch_version",
    flag_values = {
        sdk_version_label: MAJOR_VERSION + "." + MINOR_VERSION + "." + PATCH_VERSION,
    },
    visibility = ["//visibility:private"],
)

# If prerelease version is "", this will be the same as ":match_patch_version", but that's fine since we use match_any in config_setting_group.
config_setting(
    name = "match_prerelease_version",
    flag_values = {
        sdk_version_label: MAJOR_VERSION + "." + MINOR_VERSION + "." + PATCH_VERSION + PRERELEASE_SUFFIX,
    },
    visibility = ["//visibility:private"],
)

config_setting(
    name = "match_sdk_type",
    flag_values = {
        sdk_version_label: "remote",
    },
    visibility = ["//visibility:private"],
)

selects.config_setting_group(
    name = "sdk_version_setting",
    match_any = [
        ":match_all_versions",
        ":match_major_version",
        ":match_major_minor_version",
        ":match_patch_version",
        ":match_prerelease_version",
        ":match_sdk_type",
    ],
    visibility = ["//visibility:private"],
)

declare_bazel_toolchains(
    host_goarch = "amd64",
    host_goos = "darwin",
    sdk_version_setting = ":sdk_version_setting",
    toolchain_prefix = "@go_darwin_amd64//",
)
