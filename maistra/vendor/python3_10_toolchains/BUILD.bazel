# Generated by python/private/toolchains_repo.bzl
#
# These can be registered in the workspace file or passed to --extra_toolchains
# flag. By default all these toolchains are registered by the
# python_register_toolchains macro so you don't normally need to interact with
# these targets.

# Bazel selects this toolchain to get a Python interpreter
# for executing build actions.
toolchain(
    name = "aarch64-apple-darwin_toolchain",
    target_compatible_with = ["@platforms//os:macos", "@platforms//cpu:aarch64"],
    target_settings = ["@rules_python//python/config_settings:is_python_3.10.2"] if False else [],
    toolchain = "@python3_10_aarch64-apple-darwin//:python_runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
# Bazel selects this toolchain to get a Python interpreter
# for executing build actions.
toolchain(
    name = "aarch64-unknown-linux-gnu_toolchain",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:aarch64"],
    target_settings = ["@rules_python//python/config_settings:is_python_3.10.2"] if False else [],
    toolchain = "@python3_10_aarch64-unknown-linux-gnu//:python_runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
# Bazel selects this toolchain to get a Python interpreter
# for executing build actions.
toolchain(
    name = "x86_64-apple-darwin_toolchain",
    target_compatible_with = ["@platforms//os:macos", "@platforms//cpu:x86_64"],
    target_settings = ["@rules_python//python/config_settings:is_python_3.10.2"] if False else [],
    toolchain = "@python3_10_x86_64-apple-darwin//:python_runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
# Bazel selects this toolchain to get a Python interpreter
# for executing build actions.
toolchain(
    name = "x86_64-pc-windows-msvc_toolchain",
    target_compatible_with = ["@platforms//os:windows", "@platforms//cpu:x86_64"],
    target_settings = ["@rules_python//python/config_settings:is_python_3.10.2"] if False else [],
    toolchain = "@python3_10_x86_64-pc-windows-msvc//:python_runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
# Bazel selects this toolchain to get a Python interpreter
# for executing build actions.
toolchain(
    name = "x86_64-unknown-linux-gnu_toolchain",
    target_compatible_with = ["@platforms//os:linux", "@platforms//cpu:x86_64"],
    target_settings = ["@rules_python//python/config_settings:is_python_3.10.2"] if False else [],
    toolchain = "@python3_10_x86_64-unknown-linux-gnu//:python_runtimes",
    toolchain_type = "@bazel_tools//tools/python:toolchain_type",
)
