load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "remote",
    srcs = [
        "catalog.go",
        "check.go",
        "delete.go",
        "descriptor.go",
        "doc.go",
        "image.go",
        "index.go",
        "layer.go",
        "list.go",
        "mount.go",
        "multi_write.go",
        "options.go",
        "write.go",
    ],
    importpath = "github.com/google/go-containerregistry/pkg/v1/remote",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/authn",
        "//pkg/internal/redact",
        "//pkg/internal/retry",
        "//pkg/logs",
        "//pkg/name",
        "//pkg/v1:pkg",
        "//pkg/v1/internal/verify",
        "//pkg/v1/partial",
        "//pkg/v1/remote/transport",
        "//pkg/v1/types",
        "//vendor/golang.org/x/sync/errgroup",
    ],
)

alias(
    name = "go_default_library",
    actual = ":remote",
    visibility = ["//visibility:public"],
)

go_test(
    name = "remote_test",
    srcs = [
        "catalog_test.go",
        "check_test.go",
        "delete_test.go",
        "descriptor_test.go",
        "error_roundtrip_test.go",
        "image_test.go",
        "index_test.go",
        "layer_test.go",
        "list_test.go",
        "mount_test.go",
        "multi_write_test.go",
        "write_test.go",
    ],
    embed = [":remote"],
    deps = [
        "//pkg/authn",
        "//pkg/internal/compare",
        "//pkg/logs",
        "//pkg/name",
        "//pkg/registry",
        "//pkg/v1:pkg",
        "//pkg/v1/empty",
        "//pkg/v1/mutate",
        "//pkg/v1/partial",
        "//pkg/v1/random",
        "//pkg/v1/remote/transport",
        "//pkg/v1/stream",
        "//pkg/v1/tarball",
        "//pkg/v1/types",
        "//pkg/v1/validate",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
    ],
)
