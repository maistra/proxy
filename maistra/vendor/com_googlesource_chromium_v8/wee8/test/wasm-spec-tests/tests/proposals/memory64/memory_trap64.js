
'use strict';

let spectest = {
  print: console.log.bind(console),
  print_i32: console.log.bind(console),
  print_i32_f32: console.log.bind(console),
  print_f64_f64: console.log.bind(console),
  print_f32: console.log.bind(console),
  print_f64: console.log.bind(console),
  global_i32: 666,
  global_f32: 666,
  global_f64: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),
  memory: new WebAssembly.Memory({initial: 1, maximum: 2})
};
let handler = {
  get(target, prop) {
    return (prop in target) ?  target[prop] : {};
  }
};
let registry = new Proxy({spectest}, handler);

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes, valid = true) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  let validated;
  try {
    validated = WebAssembly.validate(buffer);
  } catch (e) {
    throw new Error("Wasm validate throws");
  }
  if (validated !== valid) {
    throw new Error("Wasm validate failure" + (valid ? "" : " expected"));
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function call(instance, name, args) {
  return instance.exports[name](...args);
}

function get(instance, name) {
  let v = instance.exports[name];
  return (v instanceof WebAssembly.Global) ? v.value : v;
}

function exports(name, instance) {
  return {[name]: instance.exports};
}

function run(action) {
  action();
}

function assert_malformed(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.LinkError) return;
  }
  throw new Error("Wasm linking failure expected");
}

function assert_uninstantiable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_trap(action) {
  try { action() } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

let StackOverflow;
try { (function f() { 1 + f() })() } catch (e) { StackOverflow = e.constructor }

function assert_exhaustion(action) {
  try { action() } catch (e) {
    if (e instanceof StackOverflow) return;
  }
  throw new Error("Wasm resource exhaustion expected");
}

function assert_return(action, ...expected) {
  let actual = action();
  if (actual === undefined) {
    actual = [];
  } else if (!Array.isArray(actual)) {
    actual = [actual];
  }
  if (actual.length !== expected.length) {
    throw new Error(expected.length + " value(s) expected, got " + actual.length);
  }
  for (let i = 0; i < actual.length; ++i) {
    switch (expected[i]) {
      case "nan:canonical":
      case "nan:arithmetic":
      case "nan:any":
        // Note that JS can't reliably distinguish different NaN values,
        // so there's no good way to test that it's a canonical NaN.
        if (!Number.isNaN(actual[i])) {
          throw new Error("Wasm return value NaN expected, got " + actual[i]);
        };
        return;
      default:
        if (!Object.is(actual[i], expected[i])) {
          throw new Error("Wasm return value " + expected[i] + " expected, got " + actual[i]);
        };
    }
  }
}

// memory_trap64.wast:1
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x01\x7e\x60\x02\x7e\x7f\x00\x60\x01\x7e\x01\x7f\x60\x01\x7e\x01\x7e\x03\x85\x80\x80\x80\x00\x04\x00\x01\x02\x03\x05\x83\x80\x80\x80\x00\x01\x04\x01\x07\x9e\x80\x80\x80\x00\x03\x05\x73\x74\x6f\x72\x65\x00\x01\x04\x6c\x6f\x61\x64\x00\x02\x0b\x6d\x65\x6d\x6f\x72\x79\x2e\x67\x72\x6f\x77\x00\x03\x0a\xba\x80\x80\x80\x00\x04\x89\x80\x80\x80\x00\x00\x3f\x00\x42\x80\x80\x04\x7e\x0b\x8c\x80\x80\x80\x00\x00\x10\x00\x20\x00\x7c\x20\x01\x36\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x10\x00\x20\x00\x7c\x28\x02\x00\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x40\x00\x0b");

// memory_trap64.wast:21
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x41\x2a\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "store", [int64("-4"), 42]))

// memory_trap64.wast:22
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x01\x41\x2a\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "load", [int64("-4")]), 42)

// memory_trap64.wast:23
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x41\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "store", [int64("-3"), 13]))

// memory_trap64.wast:24
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "load", [int64("-3")]))

// memory_trap64.wast:25
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x41\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "store", [int64("-2"), 13]))

// memory_trap64.wast:26
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "load", [int64("-2")]))

// memory_trap64.wast:27
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x41\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "store", [int64("-1"), 13]))

// memory_trap64.wast:28
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "load", [int64("-1")]))

// memory_trap64.wast:29
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x00\x41\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "store", [int64("0"), 13]))

// memory_trap64.wast:30
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "load", [int64("0")]))

// memory_trap64.wast:31
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x8c\x80\x80\x80\x00\x01\x02\x24\x31\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x80\x80\x08\x41\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "store", [int64("2_147_483_648"), 13]))

// memory_trap64.wast:32
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x80\x80\x08\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "load", [int64("2_147_483_648")]))

// memory_trap64.wast:34
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa9\x80\x80\x80\x00\x08\x60\x01\x7e\x01\x7f\x60\x01\x7e\x01\x7e\x60\x01\x7e\x01\x7d\x60\x01\x7e\x01\x7c\x60\x02\x7e\x7f\x00\x60\x02\x7e\x7e\x00\x60\x02\x7e\x7d\x00\x60\x02\x7e\x7c\x00\x03\x98\x80\x80\x80\x00\x17\x00\x01\x02\x03\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x04\x05\x06\x07\x04\x04\x05\x05\x05\x05\x83\x80\x80\x80\x00\x01\x04\x01\x07\xb3\x82\x80\x80\x00\x17\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x00\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x02\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x04\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x05\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x06\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x07\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x08\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x09\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x0a\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x0b\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x0c\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x0d\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x0e\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x0f\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x10\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x11\x0a\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x38\x00\x12\x0b\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x13\x0a\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x38\x00\x14\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x15\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x16\x0a\xa7\x82\x80\x80\x00\x17\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x29\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2a\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2b\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2c\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2d\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2e\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x2f\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x30\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x31\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x32\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x33\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x34\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x35\x02\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x36\x02\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x37\x03\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x38\x02\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x39\x03\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x3a\x00\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x3b\x01\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x3c\x00\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x3d\x01\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x3e\x02\x00\x0b\x0b\x9d\x80\x80\x80\x00\x02\x00\x41\x00\x0b\x08\x61\x62\x63\x64\x65\x66\x67\x68\x00\x41\xf8\xff\x03\x0b\x08\x61\x62\x63\x64\x65\x66\x67\x68");

// memory_trap64.wast:110
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("65_536"), 0]))

// memory_trap64.wast:111
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("65_535"), 0]))

// memory_trap64.wast:112
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("65_534"), 0]))

// memory_trap64.wast:113
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("65_533"), 0]))

// memory_trap64.wast:114
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("-1"), 0]))

// memory_trap64.wast:115
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("-2"), 0]))

// memory_trap64.wast:116
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("-3"), 0]))

// memory_trap64.wast:117
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store", [int64("-4"), 0]))

// memory_trap64.wast:118
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_536"), int64("0")]))

// memory_trap64.wast:119
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_535"), int64("0")]))

// memory_trap64.wast:120
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_534"), int64("0")]))

// memory_trap64.wast:121
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_533"), int64("0")]))

// memory_trap64.wast:122
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_532"), int64("0")]))

// memory_trap64.wast:123
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfb\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_531"), int64("0")]))

// memory_trap64.wast:124
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfa\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_530"), int64("0")]))

// memory_trap64.wast:125
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xf9\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("65_529"), int64("0")]))

// memory_trap64.wast:126
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-1"), int64("0")]))

// memory_trap64.wast:127
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-2"), int64("0")]))

// memory_trap64.wast:128
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-3"), int64("0")]))

// memory_trap64.wast:129
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-4"), int64("0")]))

// memory_trap64.wast:130
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7b\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-5"), int64("0")]))

// memory_trap64.wast:131
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7a\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-6"), int64("0")]))

// memory_trap64.wast:132
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x79\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-7"), int64("0")]))

// memory_trap64.wast:133
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x78\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store", [int64("-8"), int64("0")]))

// memory_trap64.wast:134
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("65_536"), 0.]))

// memory_trap64.wast:135
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("65_535"), 0.]))

// memory_trap64.wast:136
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("65_534"), 0.]))

// memory_trap64.wast:137
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("65_533"), 0.]))

// memory_trap64.wast:138
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("-1"), 0.]))

// memory_trap64.wast:139
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("-2"), 0.]))

// memory_trap64.wast:140
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("-3"), 0.]))

// memory_trap64.wast:141
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7d\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x43\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.store", [int64("-4"), 0.]))

// memory_trap64.wast:142
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_536"), 0.]))

// memory_trap64.wast:143
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_535"), 0.]))

// memory_trap64.wast:144
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_534"), 0.]))

// memory_trap64.wast:145
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_533"), 0.]))

// memory_trap64.wast:146
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_532"), 0.]))

// memory_trap64.wast:147
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xfb\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_531"), 0.]))

// memory_trap64.wast:148
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xfa\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_530"), 0.]))

// memory_trap64.wast:149
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x42\xf9\xff\x03\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("65_529"), 0.]))

// memory_trap64.wast:150
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-1"), 0.]))

// memory_trap64.wast:151
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-2"), 0.]))

// memory_trap64.wast:152
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-3"), 0.]))

// memory_trap64.wast:153
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-4"), 0.]))

// memory_trap64.wast:154
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7b\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-5"), 0.]))

// memory_trap64.wast:155
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x7a\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-6"), 0.]))

// memory_trap64.wast:156
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x79\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-7"), 0.]))

// memory_trap64.wast:157
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7c\x00\x02\x90\x80\x80\x80\x00\x01\x02\x24\x32\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x42\x78\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.store", [int64("-8"), 0.]))

// memory_trap64.wast:158
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x91\x80\x80\x80\x00\x01\x02\x24\x32\x0a\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x38\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store8", [int64("65_536"), 0]))

// memory_trap64.wast:159
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x91\x80\x80\x80\x00\x01\x02\x24\x32\x0a\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x38\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store8", [int64("-1"), 0]))

// memory_trap64.wast:160
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store16", [int64("65_536"), 0]))

// memory_trap64.wast:161
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store16", [int64("65_535"), 0]))

// memory_trap64.wast:162
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store16", [int64("-1"), 0]))

// memory_trap64.wast:163
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7f\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x41\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.store16", [int64("-2"), 0]))

// memory_trap64.wast:164
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x91\x80\x80\x80\x00\x01\x02\x24\x32\x0a\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x38\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store8", [int64("65_536"), int64("0")]))

// memory_trap64.wast:165
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x91\x80\x80\x80\x00\x01\x02\x24\x32\x0a\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x38\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store8", [int64("-1"), int64("0")]))

// memory_trap64.wast:166
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store16", [int64("65_536"), int64("0")]))

// memory_trap64.wast:167
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store16", [int64("65_535"), int64("0")]))

// memory_trap64.wast:168
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store16", [int64("-1"), int64("0")]))

// memory_trap64.wast:169
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store16", [int64("-2"), int64("0")]))

// memory_trap64.wast:170
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("65_536"), int64("0")]))

// memory_trap64.wast:171
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("65_535"), int64("0")]))

// memory_trap64.wast:172
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("65_534"), int64("0")]))

// memory_trap64.wast:173
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("65_533"), int64("0")]))

// memory_trap64.wast:174
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("-1"), int64("0")]))

// memory_trap64.wast:175
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("-2"), int64("0")]))

// memory_trap64.wast:176
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("-3"), int64("0")]))

// memory_trap64.wast:177
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.store32", [int64("-4"), int64("0")]))

// memory_trap64.wast:178
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("65_536")]))

// memory_trap64.wast:179
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("65_535")]))

// memory_trap64.wast:180
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("65_534")]))

// memory_trap64.wast:181
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("65_533")]))

// memory_trap64.wast:182
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("-1")]))

// memory_trap64.wast:183
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("-2")]))

// memory_trap64.wast:184
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("-3")]))

// memory_trap64.wast:185
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load", [int64("-4")]))

// memory_trap64.wast:186
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_536")]))

// memory_trap64.wast:187
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_535")]))

// memory_trap64.wast:188
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_534")]))

// memory_trap64.wast:189
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_533")]))

// memory_trap64.wast:190
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_532")]))

// memory_trap64.wast:191
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfb\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_531")]))

// memory_trap64.wast:192
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfa\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_530")]))

// memory_trap64.wast:193
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xf9\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("65_529")]))

// memory_trap64.wast:194
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-1")]))

// memory_trap64.wast:195
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-2")]))

// memory_trap64.wast:196
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-3")]))

// memory_trap64.wast:197
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-4")]))

// memory_trap64.wast:198
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7b\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-5")]))

// memory_trap64.wast:199
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7a\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-6")]))

// memory_trap64.wast:200
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x79\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-7")]))

// memory_trap64.wast:201
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x78\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load", [int64("-8")]))

// memory_trap64.wast:202
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("65_536")]))

// memory_trap64.wast:203
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("65_535")]))

// memory_trap64.wast:204
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("65_534")]))

// memory_trap64.wast:205
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("65_533")]))

// memory_trap64.wast:206
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("-1")]))

// memory_trap64.wast:207
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("-2")]))

// memory_trap64.wast:208
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("-3")]))

// memory_trap64.wast:209
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7d\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f32.load", [int64("-4")]))

// memory_trap64.wast:210
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_536")]))

// memory_trap64.wast:211
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_535")]))

// memory_trap64.wast:212
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_534")]))

// memory_trap64.wast:213
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_533")]))

// memory_trap64.wast:214
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_532")]))

// memory_trap64.wast:215
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfb\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_531")]))

// memory_trap64.wast:216
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfa\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_530")]))

// memory_trap64.wast:217
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xf9\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("65_529")]))

// memory_trap64.wast:218
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-1")]))

// memory_trap64.wast:219
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-2")]))

// memory_trap64.wast:220
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-3")]))

// memory_trap64.wast:221
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-4")]))

// memory_trap64.wast:222
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7b\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-5")]))

// memory_trap64.wast:223
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7a\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-6")]))

// memory_trap64.wast:224
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x79\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-7")]))

// memory_trap64.wast:225
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7c\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x78\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "f64.load", [int64("-8")]))

// memory_trap64.wast:226
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load8_s", [int64("65_536")]))

// memory_trap64.wast:227
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load8_s", [int64("-1")]))

// memory_trap64.wast:228
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load8_u", [int64("65_536")]))

// memory_trap64.wast:229
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x33\x32\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load8_u", [int64("-1")]))

// memory_trap64.wast:230
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_s", [int64("65_536")]))

// memory_trap64.wast:231
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_s", [int64("65_535")]))

// memory_trap64.wast:232
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_s", [int64("-1")]))

// memory_trap64.wast:233
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_s", [int64("-2")]))

// memory_trap64.wast:234
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_u", [int64("65_536")]))

// memory_trap64.wast:235
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_u", [int64("65_535")]))

// memory_trap64.wast:236
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_u", [int64("-1")]))

// memory_trap64.wast:237
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x33\x32\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i32.load16_u", [int64("-2")]))

// memory_trap64.wast:238
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load8_s", [int64("65_536")]))

// memory_trap64.wast:239
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load8_s", [int64("-1")]))

// memory_trap64.wast:240
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load8_u", [int64("65_536")]))

// memory_trap64.wast:241
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x92\x80\x80\x80\x00\x01\x02\x24\x32\x0b\x69\x36\x34\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load8_u", [int64("-1")]))

// memory_trap64.wast:242
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_s", [int64("65_536")]))

// memory_trap64.wast:243
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_s", [int64("65_535")]))

// memory_trap64.wast:244
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_s", [int64("-1")]))

// memory_trap64.wast:245
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_s", [int64("-2")]))

// memory_trap64.wast:246
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_u", [int64("65_536")]))

// memory_trap64.wast:247
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_u", [int64("65_535")]))

// memory_trap64.wast:248
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_u", [int64("-1")]))

// memory_trap64.wast:249
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load16_u", [int64("-2")]))

// memory_trap64.wast:250
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("65_536")]))

// memory_trap64.wast:251
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("65_535")]))

// memory_trap64.wast:252
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("65_534")]))

// memory_trap64.wast:253
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("65_533")]))

// memory_trap64.wast:254
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("-1")]))

// memory_trap64.wast:255
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("-2")]))

// memory_trap64.wast:256
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("-3")]))

// memory_trap64.wast:257
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x73\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_s", [int64("-4")]))

// memory_trap64.wast:258
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x80\x80\x04\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("65_536")]))

// memory_trap64.wast:259
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("65_535")]))

// memory_trap64.wast:260
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfe\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("65_534")]))

// memory_trap64.wast:261
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\xfd\xff\x03\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("65_533")]))

// memory_trap64.wast:262
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("-1")]))

// memory_trap64.wast:263
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7e\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("-2")]))

// memory_trap64.wast:264
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7d\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("-3")]))

// memory_trap64.wast:265
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x93\x80\x80\x80\x00\x01\x02\x24\x32\x0c\x69\x36\x34\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x7c\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_trap(() => call($2, "i64.load32_u", [int64("-4")]))

// memory_trap64.wast:268
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x42\xf8\xff\x03\x10\x00\x01\x42\xe1\xc4\x8d\xa3\xd6\xcc\xd9\xb3\xe8\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_return(() => call($2, "i64.load", [int64("65_528")]), int64("7_523_094_288_207_667_809"))

// memory_trap64.wast:269
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7e\x02\x8f\x80\x80\x80\x00\x01\x02\x24\x32\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\x02\x40\x42\x00\x10\x00\x01\x42\xe1\xc4\x8d\xa3\xd6\xcc\xd9\xb3\xe8\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_return(() => call($2, "i64.load", [int64("0")]), int64("7_523_094_288_207_667_809"))
