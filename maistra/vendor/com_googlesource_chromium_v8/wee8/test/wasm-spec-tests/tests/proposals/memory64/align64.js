
'use strict';

let spectest = {
  print: console.log.bind(console),
  print_i32: console.log.bind(console),
  print_i32_f32: console.log.bind(console),
  print_f64_f64: console.log.bind(console),
  print_f32: console.log.bind(console),
  print_f64: console.log.bind(console),
  global_i32: 666,
  global_f32: 666,
  global_f64: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),
  memory: new WebAssembly.Memory({initial: 1, maximum: 2})
};
let handler = {
  get(target, prop) {
    return (prop in target) ?  target[prop] : {};
  }
};
let registry = new Proxy({spectest}, handler);

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes, valid = true) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  let validated;
  try {
    validated = WebAssembly.validate(buffer);
  } catch (e) {
    throw new Error("Wasm validate throws");
  }
  if (validated !== valid) {
    throw new Error("Wasm validate failure" + (valid ? "" : " expected"));
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function call(instance, name, args) {
  return instance.exports[name](...args);
}

function get(instance, name) {
  let v = instance.exports[name];
  return (v instanceof WebAssembly.Global) ? v.value : v;
}

function exports(name, instance) {
  return {[name]: instance.exports};
}

function run(action) {
  action();
}

function assert_malformed(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.LinkError) return;
  }
  throw new Error("Wasm linking failure expected");
}

function assert_uninstantiable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_trap(action) {
  try { action() } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

let StackOverflow;
try { (function f() { 1 + f() })() } catch (e) { StackOverflow = e.constructor }

function assert_exhaustion(action) {
  try { action() } catch (e) {
    if (e instanceof StackOverflow) return;
  }
  throw new Error("Wasm resource exhaustion expected");
}

function assert_return(action, ...expected) {
  let actual = action();
  if (actual === undefined) {
    actual = [];
  } else if (!Array.isArray(actual)) {
    actual = [actual];
  }
  if (actual.length !== expected.length) {
    throw new Error(expected.length + " value(s) expected, got " + actual.length);
  }
  for (let i = 0; i < actual.length; ++i) {
    switch (expected[i]) {
      case "nan:canonical":
      case "nan:arithmetic":
      case "nan:any":
        // Note that JS can't reliably distinguish different NaN values,
        // so there's no good way to test that it's a canonical NaN.
        if (!Number.isNaN(actual[i])) {
          throw new Error("Wasm return value NaN expected, got " + actual[i]);
        };
        return;
      default:
        if (!Object.is(actual[i], expected[i])) {
          throw new Error("Wasm return value " + expected[i] + " expected, got " + actual[i]);
        };
    }
  }
}

// align64.wast:3
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2c\x00\x00\x1a\x0b");

// align64.wast:4
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2d\x00\x00\x1a\x0b");

// align64.wast:5
let $3 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2e\x01\x00\x1a\x0b");

// align64.wast:6
let $4 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2f\x01\x00\x1a\x0b");

// align64.wast:7
let $5 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x28\x02\x00\x1a\x0b");

// align64.wast:8
let $6 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x30\x00\x00\x1a\x0b");

// align64.wast:9
let $7 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x31\x00\x00\x1a\x0b");

// align64.wast:10
let $8 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x32\x01\x00\x1a\x0b");

// align64.wast:11
let $9 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x33\x01\x00\x1a\x0b");

// align64.wast:12
let $10 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x34\x02\x00\x1a\x0b");

// align64.wast:13
let $11 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x35\x02\x00\x1a\x0b");

// align64.wast:14
let $12 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x29\x03\x00\x1a\x0b");

// align64.wast:15
let $13 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2a\x02\x00\x1a\x0b");

// align64.wast:16
let $14 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2b\x03\x00\x1a\x0b");

// align64.wast:17
let $15 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x01\x3a\x00\x00\x0b");

// align64.wast:18
let $16 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x01\x3b\x01\x00\x0b");

// align64.wast:19
let $17 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x01\x36\x02\x00\x0b");

// align64.wast:20
let $18 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x01\x3c\x00\x00\x0b");

// align64.wast:21
let $19 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x01\x3d\x01\x00\x0b");

// align64.wast:22
let $20 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x01\x3e\x02\x00\x0b");

// align64.wast:23
let $21 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x01\x37\x03\x00\x0b");

// align64.wast:24
let $22 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x42\x00\x43\x00\x00\x80\x3f\x38\x02\x00\x0b");

// align64.wast:25
let $23 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x39\x03\x00\x0b");

// align64.wast:27
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:33
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:39
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:45
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:51
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:57
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:63
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:69
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:75
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:81
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:87
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:93
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:99
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:105
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:111
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:117
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:123
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:129
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:135
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:141
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:147
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:153
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:159
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:165
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:171
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:177
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:183
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:189
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:196
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:202
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:208
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:214
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:220
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:226
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:232
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:238
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:244
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:250
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:256
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:262
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:268
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:274
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:280
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:286
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:292
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:298
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// align64.wast:305
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2c\x01\x00\x1a\x0b");

// align64.wast:309
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2d\x01\x00\x1a\x0b");

// align64.wast:313
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2e\x02\x00\x1a\x0b");

// align64.wast:317
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2f\x02\x00\x1a\x0b");

// align64.wast:321
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x28\x03\x00\x1a\x0b");

// align64.wast:325
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x30\x01\x00\x1a\x0b");

// align64.wast:329
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x31\x01\x00\x1a\x0b");

// align64.wast:333
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x32\x02\x00\x1a\x0b");

// align64.wast:337
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x33\x02\x00\x1a\x0b");

// align64.wast:341
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x34\x03\x00\x1a\x0b");

// align64.wast:345
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x35\x03\x00\x1a\x0b");

// align64.wast:349
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x29\x04\x00\x1a\x0b");

// align64.wast:353
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2a\x03\x00\x1a\x0b");

// align64.wast:357
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2b\x04\x00\x1a\x0b");

// align64.wast:362
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2c\x01\x00\x1a\x0b");

// align64.wast:366
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2d\x01\x00\x1a\x0b");

// align64.wast:370
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2e\x02\x00\x1a\x0b");

// align64.wast:374
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2f\x02\x00\x1a\x0b");

// align64.wast:378
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x28\x03\x00\x1a\x0b");

// align64.wast:382
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x30\x01\x00\x1a\x0b");

// align64.wast:386
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x31\x01\x00\x1a\x0b");

// align64.wast:390
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x32\x02\x00\x1a\x0b");

// align64.wast:394
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x33\x02\x00\x1a\x0b");

// align64.wast:398
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x34\x03\x00\x1a\x0b");

// align64.wast:402
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x35\x03\x00\x1a\x0b");

// align64.wast:406
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x29\x04\x00\x1a\x0b");

// align64.wast:410
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2a\x03\x00\x1a\x0b");

// align64.wast:414
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x00\x2b\x04\x00\x1a\x0b");

// align64.wast:419
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x00\x3a\x01\x00\x0b");

// align64.wast:423
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x00\x3b\x02\x00\x0b");

// align64.wast:427
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x00\x36\x03\x00\x0b");

// align64.wast:431
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x00\x3c\x01\x00\x0b");

// align64.wast:435
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x00\x3d\x02\x00\x0b");

// align64.wast:439
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x00\x3e\x03\x00\x0b");

// align64.wast:443
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x42\x00\x37\x04\x00\x0b");

// align64.wast:447
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x42\x00\x43\x00\x00\x00\x00\x38\x03\x00\x0b");

// align64.wast:451
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x05\x83\x80\x80\x80\x00\x01\x04\x00\x0a\x96\x80\x80\x80\x00\x01\x90\x80\x80\x80\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x39\x04\x00\x0b");

// align64.wast:458
let $24 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x01\x7f\x01\x7d\x60\x01\x7f\x01\x7c\x60\x02\x7f\x7f\x01\x7f\x60\x02\x7f\x7f\x01\x7e\x03\x85\x80\x80\x80\x00\x04\x00\x01\x02\x03\x05\x83\x80\x80\x80\x00\x01\x04\x01\x07\xcd\x80\x80\x80\x00\x04\x10\x66\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x00\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x10\x69\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x02\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x03\x0a\x89\x89\x80\x80\x00\x04\xe3\x80\x80\x80\x00\x01\x02\x7d\x43\x00\x00\x20\x41\x21\x01\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x20\x00\x0e\x04\x00\x01\x02\x03\x04\x0b\x42\x00\x20\x01\x38\x02\x00\x42\x00\x2a\x02\x00\x21\x02\x0c\x03\x0b\x42\x00\x20\x01\x38\x00\x00\x42\x00\x2a\x00\x00\x21\x02\x0c\x02\x0b\x42\x00\x20\x01\x38\x01\x00\x42\x00\x2a\x01\x00\x21\x02\x0c\x01\x0b\x42\x00\x20\x01\x38\x02\x00\x42\x00\x2a\x02\x00\x21\x02\x0b\x20\x02\x0b\xfb\x80\x80\x80\x00\x01\x02\x7c\x44\x00\x00\x00\x00\x00\x00\x24\x40\x21\x01\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x20\x00\x0e\x05\x00\x01\x02\x03\x04\x05\x0b\x42\x00\x20\x01\x39\x03\x00\x42\x00\x2b\x03\x00\x21\x02\x0c\x04\x0b\x42\x00\x20\x01\x39\x00\x00\x42\x00\x2b\x00\x00\x21\x02\x0c\x03\x0b\x42\x00\x20\x01\x39\x01\x00\x42\x00\x2b\x01\x00\x21\x02\x0c\x02\x0b\x42\x00\x20\x01\x39\x02\x00\x42\x00\x2b\x02\x00\x21\x02\x0c\x01\x0b\x42\x00\x20\x01\x39\x03\x00\x42\x00\x2b\x03\x00\x21\x02\x0b\x20\x02\x0b\xe2\x82\x80\x80\x00\x01\x02\x7f\x41\x0a\x21\x02\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x20\x00\x0e\x05\x00\x01\x02\x03\x04\x05\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3a\x00\x00\x42\x00\x2c\x00\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3a\x00\x00\x42\x00\x2c\x00\x00\x21\x03\x0b\x0c\x04\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3a\x00\x00\x42\x00\x2d\x00\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3a\x00\x00\x42\x00\x2d\x00\x00\x21\x03\x0b\x0c\x03\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3b\x01\x00\x42\x00\x2e\x01\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3b\x00\x00\x42\x00\x2e\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3b\x01\x00\x42\x00\x2e\x01\x00\x21\x03\x0b\x0c\x02\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3b\x01\x00\x42\x00\x2f\x01\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3b\x00\x00\x42\x00\x2f\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3b\x01\x00\x42\x00\x2f\x01\x00\x21\x03\x0b\x0c\x01\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x36\x02\x00\x42\x00\x28\x02\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x36\x00\x00\x42\x00\x28\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x36\x01\x00\x42\x00\x28\x01\x00\x21\x03\x0b\x20\x01\x41\x04\x46\x04\x40\x42\x00\x20\x02\x36\x02\x00\x42\x00\x28\x02\x00\x21\x03\x0b\x0b\x20\x03\x0b\xb4\x84\x80\x80\x00\x01\x02\x7e\x42\x0a\x21\x02\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x02\x40\x20\x00\x0e\x07\x00\x01\x02\x03\x04\x05\x06\x07\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3c\x00\x00\x42\x00\x30\x00\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3c\x00\x00\x42\x00\x30\x00\x00\x21\x03\x0b\x0c\x06\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3c\x00\x00\x42\x00\x31\x00\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3c\x00\x00\x42\x00\x31\x00\x00\x21\x03\x0b\x0c\x05\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3d\x01\x00\x42\x00\x32\x01\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3d\x00\x00\x42\x00\x32\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3d\x01\x00\x42\x00\x32\x01\x00\x21\x03\x0b\x0c\x04\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3d\x01\x00\x42\x00\x33\x01\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3d\x00\x00\x42\x00\x33\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3d\x01\x00\x42\x00\x33\x01\x00\x21\x03\x0b\x0c\x03\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3e\x02\x00\x42\x00\x34\x02\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3e\x00\x00\x42\x00\x34\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3e\x01\x00\x42\x00\x34\x01\x00\x21\x03\x0b\x20\x01\x41\x04\x46\x04\x40\x42\x00\x20\x02\x3e\x02\x00\x42\x00\x34\x02\x00\x21\x03\x0b\x0c\x02\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x3e\x02\x00\x42\x00\x35\x02\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x3e\x00\x00\x42\x00\x35\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x3e\x01\x00\x42\x00\x35\x01\x00\x21\x03\x0b\x20\x01\x41\x04\x46\x04\x40\x42\x00\x20\x02\x3e\x02\x00\x42\x00\x35\x02\x00\x21\x03\x0b\x0c\x01\x0b\x20\x01\x41\x00\x46\x04\x40\x42\x00\x20\x02\x37\x03\x00\x42\x00\x29\x03\x00\x21\x03\x0b\x20\x01\x41\x01\x46\x04\x40\x42\x00\x20\x02\x37\x00\x00\x42\x00\x29\x00\x00\x21\x03\x0b\x20\x01\x41\x02\x46\x04\x40\x42\x00\x20\x02\x37\x01\x00\x42\x00\x29\x01\x00\x21\x03\x0b\x20\x01\x41\x04\x46\x04\x40\x42\x00\x20\x02\x37\x02\x00\x42\x00\x29\x02\x00\x21\x03\x0b\x20\x01\x41\x08\x46\x04\x40\x42\x00\x20\x02\x37\x03\x00\x42\x00\x29\x03\x00\x21\x03\x0b\x0b\x20\x03\x0b");

// align64.wast:802
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7d\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\xbc\x43\x00\x00\x20\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f32_align_switch", [0]), 10.)

// align64.wast:803
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7d\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\xbc\x43\x00\x00\x20\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f32_align_switch", [1]), 10.)

// align64.wast:804
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7d\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x02\x10\x00\xbc\x43\x00\x00\x20\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f32_align_switch", [2]), 10.)

// align64.wast:805
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7d\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x33\x32\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x03\x10\x00\xbc\x43\x00\x00\x20\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f32_align_switch", [3]), 10.)

// align64.wast:807
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7c\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x24\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f64_align_switch", [0]), 10.)

// align64.wast:808
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7c\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x24\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f64_align_switch", [1]), 10.)

// align64.wast:809
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7c\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\x02\x40\x41\x02\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x24\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f64_align_switch", [2]), 10.)

// align64.wast:810
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7c\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\x02\x40\x41\x03\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x24\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f64_align_switch", [3]), 10.)

// align64.wast:811
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7c\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x66\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\x02\x40\x41\x04\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x24\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "f64_align_switch", [4]), 10.)

// align64.wast:813
assert_return(() => call($24, "i32_align_switch", [0, 0]), 10);

// align64.wast:814
assert_return(() => call($24, "i32_align_switch", [0, 1]), 10);

// align64.wast:815
assert_return(() => call($24, "i32_align_switch", [1, 0]), 10);

// align64.wast:816
assert_return(() => call($24, "i32_align_switch", [1, 1]), 10);

// align64.wast:817
assert_return(() => call($24, "i32_align_switch", [2, 0]), 10);

// align64.wast:818
assert_return(() => call($24, "i32_align_switch", [2, 1]), 10);

// align64.wast:819
assert_return(() => call($24, "i32_align_switch", [2, 2]), 10);

// align64.wast:820
assert_return(() => call($24, "i32_align_switch", [3, 0]), 10);

// align64.wast:821
assert_return(() => call($24, "i32_align_switch", [3, 1]), 10);

// align64.wast:822
assert_return(() => call($24, "i32_align_switch", [3, 2]), 10);

// align64.wast:823
assert_return(() => call($24, "i32_align_switch", [4, 0]), 10);

// align64.wast:824
assert_return(() => call($24, "i32_align_switch", [4, 1]), 10);

// align64.wast:825
assert_return(() => call($24, "i32_align_switch", [4, 2]), 10);

// align64.wast:826
assert_return(() => call($24, "i32_align_switch", [4, 4]), 10);

// align64.wast:828
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x00\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [0, 0]), int64("10"))

// align64.wast:829
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x00\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [0, 1]), int64("10"))

// align64.wast:830
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x01\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [1, 0]), int64("10"))

// align64.wast:831
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x01\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [1, 1]), int64("10"))

// align64.wast:832
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x02\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [2, 0]), int64("10"))

// align64.wast:833
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x02\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [2, 1]), int64("10"))

// align64.wast:834
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x02\x41\x02\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [2, 2]), int64("10"))

// align64.wast:835
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x03\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [3, 0]), int64("10"))

// align64.wast:836
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x03\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [3, 1]), int64("10"))

// align64.wast:837
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x03\x41\x02\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [3, 2]), int64("10"))

// align64.wast:838
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x04\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [4, 0]), int64("10"))

// align64.wast:839
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x04\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [4, 1]), int64("10"))

// align64.wast:840
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x04\x41\x02\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [4, 2]), int64("10"))

// align64.wast:841
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x04\x41\x04\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [4, 4]), int64("10"))

// align64.wast:842
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x05\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [5, 0]), int64("10"))

// align64.wast:843
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x05\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [5, 1]), int64("10"))

// align64.wast:844
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x05\x41\x02\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [5, 2]), int64("10"))

// align64.wast:845
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x05\x41\x04\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [5, 4]), int64("10"))

// align64.wast:846
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x06\x41\x00\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [6, 0]), int64("10"))

// align64.wast:847
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x06\x41\x01\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [6, 1]), int64("10"))

// align64.wast:848
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x06\x41\x02\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [6, 2]), int64("10"))

// align64.wast:849
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x06\x41\x04\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [6, 4]), int64("10"))

// align64.wast:850
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7f\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x03\x24\x32\x34\x10\x69\x36\x34\x5f\x61\x6c\x69\x67\x6e\x5f\x73\x77\x69\x74\x63\x68\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x06\x41\x08\x10\x00\x01\x42\x0a\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$24", $24)),  "run", []));  // assert_return(() => call($24, "i64_align_switch", [6, 8]), int64("10"))

// align64.wast:854
let $25 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x02\x7e\x7e\x00\x60\x01\x7e\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x00\x01\x05\x83\x80\x80\x80\x00\x01\x04\x01\x07\x90\x80\x80\x80\x00\x02\x05\x73\x74\x6f\x72\x65\x00\x00\x04\x6c\x6f\x61\x64\x00\x01\x0a\x9b\x80\x80\x80\x00\x02\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\x37\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b");

// align64.wast:864
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7e\x7e\x00\x02\x8d\x80\x80\x80\x00\x01\x03\x24\x32\x35\x05\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x42\x7f\x10\x00\x0f\x0b\x00\x0b", exports("$25", $25)),  "run", []));  // assert_trap(() => call($25, "store", [int64("65_532"), int64("-1")]))

// align64.wast:866
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x01\x7f\x02\x8c\x80\x80\x80\x00\x01\x03\x24\x32\x35\x04\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x42\xfc\xff\x03\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$25", $25)),  "run", []));  // assert_return(() => call($25, "load", [int64("65_532")]), 0)
