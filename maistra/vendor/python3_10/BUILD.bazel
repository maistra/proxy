# Generated by python/private/toolchains_repo.bzl
package(default_visibility = ["//visibility:public"])
load("@rules_python//python:versions.bzl", "PLATFORMS", "gen_python_config_settings")
gen_python_config_settings()
exports_files(["defs.bzl"])
alias(name = "files",           actual = select({":" + item: "@python3_10_" + item + "//:files" for item in PLATFORMS.keys()}))
alias(name = "includes",        actual = select({":" + item: "@python3_10_" + item + "//:includes" for item in PLATFORMS.keys()}))
alias(name = "libpython",       actual = select({":" + item: "@python3_10_" + item + "//:libpython" for item in PLATFORMS.keys()}))
alias(name = "py3_runtime",     actual = select({":" + item: "@python3_10_" + item + "//:py3_runtime" for item in PLATFORMS.keys()}))
alias(name = "python_headers",  actual = select({":" + item: "@python3_10_" + item + "//:python_headers" for item in PLATFORMS.keys()}))
alias(name = "python_runtimes", actual = select({":" + item: "@python3_10_" + item + "//:python_runtimes" for item in PLATFORMS.keys()}))
alias(name = "python3",         actual = select({":" + item: "@python3_10_" + item + "//:" + ("python.exe" if "windows" in item else "bin/python3") for item in PLATFORMS.keys()}))
alias(name = "pip",             actual = select({":" + item: "@python3_10_" + item + "//:python_runtimes" for item in PLATFORMS.keys() if "windows" not in item}))
