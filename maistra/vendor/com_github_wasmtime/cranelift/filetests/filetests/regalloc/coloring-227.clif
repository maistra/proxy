test regalloc
target x86_64 legacy haswell

function %pr227(i32 [%rdi], i32 [%rsi], i32 [%rdx], i32 [%rcx], i64 vmctx [%r8]) system_v {
    gv0 = vmctx
    heap0 = static gv0, min 0, bound 0x0001_0000_0000, offset_guard 0x8000_0000

                          block0(v0: i32, v1: i32, v2: i32, v3: i32, v4: i64):
[RexOp1pu_id#b8]              v5 = iconst.i32 0
[RexOp1pu_id#b8]              v6 = iconst.i32 0
[RexOp1tjccb#74]              brz v6, block10
[Op1jmpb#eb]                  jump block3(v5, v5, v5, v5, v5, v5, v0, v1, v2, v3)

                          block3(v15: i32, v17: i32, v25: i32, v31: i32, v40: i32, v47: i32, v54: i32, v61: i32, v68: i32, v75: i32):
[Op1jmpb#eb]                  jump block6

                          block6:
[RexOp1pu_id#b8]              v8 = iconst.i32 0
[RexOp1tjccb#75]              brnz v8, block5
[Op1jmpb#eb]                  jump block20

                          block20:
[RexOp1pu_id#b8]              v9 = iconst.i32 0
[RexOp1pu_id#b8]              v11 = iconst.i32 0
[DynRexOp1icscc#39]           v12 = icmp.i32 eq v15, v11
[RexOp2urm_noflags#4b6]       v13 = bint.i32 v12
[DynRexOp1rr#21]              v14 = band v9, v13
[RexOp1tjccb#75]              brnz v14, block6
[Op1jmpb#eb]                  jump block7

                          block7:
[RexOp1tjccb#74]              brz.i32 v17, block8
[Op1jmpb#eb]                  jump block17

                          block17:
[RexOp1pu_id#b8]              v18 = iconst.i32 0
[RexOp1tjccb#74]              brz v18, block9
[Op1jmpb#eb]                  jump block16

                          block16:
[RexOp1pu_id#b8]              v21 = iconst.i32 0
[RexOp1umr#89]                v79 = uextend.i64 v5
[RexOp1r_ib#8083]             v80 = iadd_imm.i64 v4, 0
[RexOp1ld#808b]               v81 = load.i64 v80
[RexOp1rr#8001]               v22 = iadd v81, v79
[RexMp1st#189]                istore16 v21, v22
[Op1jmpb#eb]                  jump block9

                          block9:
[Op1jmpb#eb]                  jump block8

                          block8:
[RexOp1pu_id#b8]              v27 = iconst.i32 3
[RexOp1pu_id#b8]              v28 = iconst.i32 4
[DynRexOp1rr#09]              v35 = bor.i32 v31, v13
[RexOp1tjccb#75]              brnz v35, block15(v27)
[Op1jmpb#eb]                  jump block15(v28)

                          block15(v36: i32):
[Op1jmpb#eb]                  jump block3(v25, v36, v25, v31, v40, v47, v54, v61, v68, v75)

                          block5:
[Op1jmpb#eb]                  jump block4

                          block4:
[Op1jmpb#eb]                  jump block2(v40, v47, v54, v61, v68, v75)

                          block10:
[RexOp1pu_id#b8]              v43 = iconst.i32 0
[Op1jmpb#eb]                  jump block2(v43, v5, v0, v1, v2, v3)

                          block2(v7: i32, v45: i32, v52: i32, v59: i32, v66: i32, v73: i32):
[RexOp1pu_id#b8]              v44 = iconst.i32 0
[RexOp1tjccb#74]              brz v44, block12
[Op1jmpb#eb]                  jump block18

                          block18:
[RexOp1pu_id#b8]              v50 = iconst.i32 11
[RexOp1tjccb#74]              brz v50, block14
[Op1jmpb#eb]                  jump block19

                          block19:
[RexOp1umr#89]                v82 = uextend.i64 v52
[RexOp1r_ib#8083]             v83 = iadd_imm.i64 v4, 0
[RexOp1ld#808b]               v84 = load.i64 v83
[RexOp1rr#8001]               v57 = iadd v84, v82
[RexOp1ld#8b]                 v58 = load.i32 v57
[RexOp1umr#89]                v85 = uextend.i64 v58
[RexOp1r_ib#8083]             v86 = iadd_imm.i64 v4, 0
[RexOp1ld#808b]               v87 = load.i64 v86
[RexOp1rr#8001]               v64 = iadd v87, v85
[RexOp1st#88]                 istore8 v59, v64
[RexOp1pu_id#b8]              v65 = iconst.i32 0
[Op1jmpb#eb]                  jump block13(v65)

                          block14:
[Op1jmpb#eb]                  jump block13(v66)

                          block13(v51: i32):
[RexOp1umr#89]                v88 = uextend.i64 v45
[RexOp1r_ib#8083]             v89 = iadd_imm.i64 v4, 0
[RexOp1ld#808b]               v90 = load.i64 v89
[RexOp1rr#8001]               v71 = iadd v90, v88
[RexOp1st#89]                 store v51, v71
[Op1jmpb#eb]                  jump block12

                          block12:
[Op1jmpb#eb]                  jump block11

                          block11:
[Op1jmpb#eb]                  jump block1

                          block1:
[Op1ret#c3]                   return
}
