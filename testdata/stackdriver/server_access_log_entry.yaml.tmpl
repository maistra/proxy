http_request:
  {{- if .Vars.RequestOperation }}
  request_method: "{{ .Vars.RequestOperation }}"
  {{- else }}
  request_method: "GET"
  {{- end }}
  request_url: "http://127.0.0.1:{{ .Ports.ClientPort }}/{{ .Vars.RequestPath }}"
  server_ip: "127.0.0.1:{{ .Ports.ServerPort }}"
  protocol: "http"
  status: {{ .Vars.SDLogStatusCode }}
  {{- if .Vars.UserAgent }}
  user_agent: "chrome"
  {{- else }}
  user_agent: "Go-http-client/1.1"
  {{- end }}
labels:
  destination_principal: "{{ .Vars.DestinationPrincipal }}"
  destination_service_host: server.default.svc.cluster.local
  destination_service_name: server
  response_flag: "-"
  service_authentication_policy: {{ .Vars.ServiceAuthenticationPolicy }}
  source_principal: "{{ .Vars.SourcePrincipal }}"
  {{- if .Vars.SourceUnknown }}
  source_name: ""
  source_namespace: ""
  source_workload: ""
  {{- else }}
  source_name: productpage-v1-84975bc778-pxz2w
  source_namespace: default
  source_workload: productpage-v1
  source_app: productpage
  source_canonical_service: productpage-v1
  source_canonical_revision: version-1
  source_version: v1
  {{- end }}
  protocol: http
  {{- if .Vars.LogSampled }}
  log_sampled: "true"
  {{- else }}
  log_sampled: "false"
  {{- end }}
  upstream_cluster: "server-inbound-cluster"
  {{- if .Vars.RbacAccessDenied }}
  response_details: "AuthzDenied"
  policy_name: "foo.httpbin-deny"
  policy_rule: "0"
  {{-  else }}
  response_details: "via_upstream"
  route_name: server_route
  {{- end }}
  {{- if eq .Vars.RbacDryRunResult "Denied" }}
  dry_run_result: "AuthzDenied"
  dry_run_policy_name: "foo.httpbin-dryrun-deny"
  dry_run_policy_rule: "0"
  {{- else if eq .Vars.RbacDryRunResult "Allowed" }}
  dry_run_result: "AuthzAllowed"
  dry_run_policy_name: "foo.httpbin-dryrun-allow"
  dry_run_policy_rule: "0"
  {{- end }}
{{- if eq .Vars.SDLogStatusCode "200" }}
severity: INFO
{{- else }}
severity: ERROR
{{- end }}
